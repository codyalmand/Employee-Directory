{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macbook/Documents/Homework/Employee-Directory/employee-directory/src/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport App from \"./App\";\nconst styles = {\n  titleText: {\n    textAlign: center\n  }\n};\n\nconst Table = ({\n  users\n}) => {\n  _s();\n\n  const [sortedUsers, updateSortedUsers] = useState([]);\n  useEffect(() => updateSortedUsers(users), [users]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: styles.titleText,\n            className: \"titleText\",\n            scope: \"col\",\n            onClick: () => {\n              const usersCopy = [...users];\n              const updateSort = usersCopy.sort((a, b) => {\n                const nameA = a.name.first;\n                const nameB = b.name.first;\n\n                if (nameA < nameB) {\n                  return -1;\n                }\n\n                if (nameA > nameB) {\n                  return 1;\n                }\n\n                return 0;\n              });\n              updateSortedUsers(updateSort);\n            },\n            children: \"First\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Last\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"cell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"city\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sortedUsers.map(({\n          location: {\n            city,\n            state\n          },\n          picture: {\n            thumbnail\n          },\n          cell,\n          email,\n          name: {\n            first,\n            last\n          }\n        }) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: first\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: last\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: cell\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: thumbnail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, email, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Table, \"YAhgD2YvyJK8FCLkdKJeC6Rexw0=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/macbook/Documents/Homework/Employee-Directory/employee-directory/src/Table.js"],"names":["React","useState","useEffect","App","styles","titleText","textAlign","center","Table","users","sortedUsers","updateSortedUsers","usersCopy","updateSort","sort","a","b","nameA","name","first","nameB","map","location","city","state","picture","thumbnail","cell","email","last"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport App from \"./App\"\n\nconst styles = {\n    titleText: {\n      textAlign: center\n    },\n\n}\n\nconst Table = ({ users }) => {\n  const [sortedUsers, updateSortedUsers] = useState([]);\n\n  useEffect(() => updateSortedUsers(users), [users]);\n\n  return (\n    <div>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th style = {styles.titleText} className=\"titleText\"\n              scope=\"col\"\n              onClick={() => {\n                const usersCopy = [...users];\n                const updateSort = usersCopy.sort((a, b) => {\n                  const nameA = a.name.first;\n                  const nameB = b.name.first;\n\n                  if (nameA < nameB) {\n                    return -1;\n                  }\n                  if (nameA > nameB) {\n                    return 1;\n                  }\n\n                  return 0;\n                });\n\n                updateSortedUsers(updateSort);\n              }}\n            >\n              First\n            </th>\n            <th scope=\"col\">Last</th>\n            <th scope=\"col\">email</th>\n            <th scope=\"col\">cell</th>\n            <th scope=\"col\">city</th>\n            <th scope=\"col\">state</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedUsers.map(\n            ({\n              location: { city, state },\n              picture: { thumbnail },\n              cell,\n              email,\n              name: { first, last }\n            }) => (\n              <tr key={email}>\n                <th>{first}</th>\n                <td>{last}</td>\n                <td>{email}</td>\n                <td>{cell}</td>\n                <td>{city}</td>\n                <td>{state}</td>\n                <td>\n                  <img src={thumbnail} />\n                </td>\n\n                <td></td>\n              </tr>\n            )\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\nexport default Table;"]},"metadata":{},"sourceType":"module"}